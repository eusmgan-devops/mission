{
    "Description": "Configures autoscaling group for api app",
    "Parameters": {
        "PublicSubnet1": {
            "Description": "Second private VPC subnet ID for the api app.",
            "Type": "AWS::EC2::Subnet::Id"
        }
    },
    "Resources": {


"S3AccessRole" : {
    "Type"  : "AWS::IAM::Role",
    "Properties" : {
        "AssumeRolePolicyDocument" : {
            "Statement" : [ {
                "Effect" : "Allow",
                "Principal" : {
                    "Service" : [ "ec2.amazonaws.com" ]
                },
                "Action" : [ "sts:AssumeRole" ]
            } ]
        },
        "Path" : "/"
    }
},

"S3RolePolicies" : {
    "Type" : "AWS::IAM::Policy",
    "Properties" : {
        "PolicyName" : "s3access",
        "PolicyDocument" : {
            "Statement" : [ {
                "Effect" : "Allow",
                "Action" : "s3:*",
                "Resource" : "*"
            }]
        },
        "Roles" : [ { "Ref" : "S3AccessRole" } ]
    }
},

"S3InstanceProfile" : {
    "Type" : "AWS::IAM::InstanceProfile",
    "Properties" : {
        "Path" : "/",
        "Roles" : [ { "Ref" : "S3AccessRole" } ]
    }
},


        "AutoscalingGroup": {
            "Properties": {

                "DesiredCapacity": "2",
                "LaunchConfigurationName": {
                    "Ref": "LaunchConfiguration"
                },
                "MaxSize": "5",
                "MinSize": "1",
                "VPCZoneIdentifier": [
                    {
                        "Ref": "PublicSubnet1"
                    },
                    {
                        "Ref": "PublicSubnet1"
                    }
                ]
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "UpdatePolicy": {
                "AutoScalingReplacingUpdate": {
                    "WillReplace": "true"
                },
                "AutoScalingRollingUpdate": {
                    "MaxBatchSize": "1",
                    "MinInstancesInService": "1",
                    "PauseTime": "PT5M",
                    "WaitOnResourceSignals": "true"
                }
            }
        },
        "LaunchConfiguration": {
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/tmp/configs.txt": {
                                "content": "this is only a test",
                                "group": "root",
                                "mode": "000777",
                                "owner": "root"
                            }

                        },



                    }
                }
            },
            "Properties": {
             "IamInstanceProfile": 
              "s3FullAccess"
             ,
                "AssociatePublicIpAddress": "true",
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "8"
                        }
                    }
                ],
                "ImageId": "ami-4cdd453f",
                "InstanceType": "t1.micro",
                "KeyName": "ireland",

                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\n",
                                "sudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\n",
                                "sudo yum install jenkins -y\n",
                                "sudo service jenkins start\n",
                                "yum update -y aws-cfn-bootstrap\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource LaunchConfiguration ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource AutoscalingGroup ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        }
    }
}
